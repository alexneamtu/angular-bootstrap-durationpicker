!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var s in n)("object"==typeof exports?exports:e)[s]=n[s]}}(this,function(){return function(e){function t(s){if(n[s])return n[s].exports;var o=n[s]={exports:{},id:s,loaded:!1};return e[s].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";angular.module("durationpicker",[]).directive("durationpicker",n(1))},function(e,t,n){"use strict";function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(){return{restrict:"E",scope:{model:"=",hourStep:"@",minuteStep:"@",min:"@",max:"@",beforeAfterWhat:"@"},template:r,controller:c}}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}(),r=n(2),c=function(){function e(t){s(this,e),this.$scope=t,this.refresh(),t.incrementHours=this.incrementHours.bind(this),t.decrementHours=this.decrementHours.bind(this),t.incrementMinutes=this.incrementMinutes.bind(this),t.decrementMinutes=this.decrementMinutes.bind(this),t.toggleBeforeAfter=this.toggleBeforeAfter.bind(this),t.noIncrementHours=this.noIncrementHours.bind(this),t.noDecrementHours=this.noDecrementHours.bind(this),t.noIncrementMinutes=this.noIncrementMinutes.bind(this),t.noDecrementMinutes=this.noDecrementMinutes.bind(this),t.noToggleBeforeAfter=this.noToggleBeforeAfter.bind(this),t.updateDuration=this.updateDuration.bind(this)}return i(e,[{key:"incrementHours",value:function(){this.noIncrementHours()||this.addMinutesToModel(60*this.$scope.hourStep)}},{key:"decrementHours",value:function(){this.noDecrementHours()||this.addMinutesToModel(60*-this.$scope.hourStep)}},{key:"incrementMinutes",value:function(){this.noIncrementMinutes()||this.addMinutesToModel(this.$scope.minuteStep)}},{key:"decrementMinutes",value:function(){this.noDecrementMinutes()||this.addMinutesToModel(-this.$scope.minuteStep)}},{key:"toggleBeforeAfter",value:function(){this.noToggleBeforeAfter()||(this.$scope.model=-this.$scope.model,this.$scope.beforeAfter=this.$scope.model<0?"before":"after")}},{key:"noIncrementHours",value:function(){var e=this.addMinutes(60*this.$scope.hourStep);return e>this.$scope.max}},{key:"noDecrementHours",value:function(){var e=this.addMinutes(60*-this.$scope.hourStep);return e<this.$scope.min}},{key:"noIncrementMinutes",value:function(){var e=this.addMinutes(this.$scope.minuteStep);return e>this.$scope.max}},{key:"noDecrementMinutes",value:function(){var e=this.addMinutes(-this.$scope.minuteStep);return e<this.$scope.min}},{key:"noToggleBeforeAfter",value:function(){return-this.$scope.model<this.$scope.min||-this.$scope.model>this.$scope.max}},{key:"addMinutesToModel",value:function(e){this.$scope.model=this.addMinutes(e),this.refresh()}},{key:"addMinutes",value:function(e){return parseInt(this.$scope.model)+60*e}},{key:"refresh",value:function(){this.$scope.hours=this.pad(parseInt(this.$scope.model/3600)%24||0),this.$scope.minutes=this.pad(parseInt(this.$scope.model/60)%60||0),this.$scope.beforeAfter=this.$scope.model<0?"before":"after",this.$scope.showBeforeAfter=0!=this.$scope.model}},{key:"pad",value:function(e){return angular.isDefined(e)&&Math.abs(e).toString().length<2?"0"+Math.abs(e):Math.abs(e).toString()}},{key:"updateDuration",value:function(){var e=parseInt(parseInt(this.$scope.hours)/this.$scope.hourStep)*parseInt(this.$scope.hourStep),t=parseInt(parseInt(this.$scope.minutes)/this.$scope.minuteStep)*parseInt(this.$scope.minuteStep);this.$scope.model=60*e*60+60*t,this.$scope.model>this.$scope.max&&(this.$scope.model=this.$scope.max),this.$scope.model<this.$scope.min&&(this.$scope.model=this.$scope.min),this.refresh()}}]),e}();c.$inject=["$scope"],t.default=o,e.exports=t.default},function(e,t){e.exports='<table ng-model=model> <tbody> <tr class=text-center> <td> <a ng-click=incrementHours() ng-class="{disabled: noIncrementHours()}" class="btn btn-link" ng-disabled=noIncrementHours() tabindex=0> <span class="glyphicon glyphicon-chevron-up"></span> </a> </td> <td>&nbsp;</td> <td> <a ng-click=incrementMinutes() ng-class="{disabled: noIncrementMinutes()}" class="btn btn-link" ng-disabled=noIncrementMinutes() tabindex=0> <span class="glyphicon glyphicon-chevron-up"></span> </a> </td> </tr> <tr> <td class=form-group ng-class="{\'has-error\': invalidHours}"> <input style=width:50px type=text ng-model=hours ng-change=updateDuration() class="form-control text-center" maxlength=3 tabindex=0> </td> <td>:</td> <td class=form-group ng-class="{\'has-error\': invalidMinutes}"> <input style=width:50px type=text ng-model=minutes ng-change=updateDuration() class="form-control text-center" maxlength=2 tabindex=0> </td> <td class="uib-time am-pm"> <button ng-show=showBeforeAfter type=button ng-class="{disabled: noToggleBeforeAfter()}" class="btn btn-default text-center ng-binding" ng-click=toggleBeforeAfter() ng-disabled=noToggleBeforeAfter() tabindex=0>{{beforeAfter}} {{beforeAfterWhat}} </button> </td> </tr> <tr class=text-center> <td> <a ng-click=decrementHours() ng-class="{disabled: noDecrementHours()}" class="btn btn-link" ng-disabled=noDecrementHours() tabindex=0> <span class="glyphicon glyphicon-chevron-down"></span> </a> </td> <td>&nbsp;</td> <td> <a ng-click=decrementMinutes() ng-class="{disabled: noDecrementMinutes()}" class="btn btn-link" ng-disabled=noDecrementMinutes() tabindex=0><span class="glyphicon glyphicon-chevron-down"></span> </a> </td> </tr> </tbody> </table>'}])});